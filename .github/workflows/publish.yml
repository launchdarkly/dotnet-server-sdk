name: Publish Package
on:
  workflow_dispatch:
    inputs:
      workspace_path:
        description: 'Path to the workspace being released.'
        required: true
        type: string
      project_file:
        description: 'Path to the project file.'
        required: true
        type: string
      test_project_file:
        description: 'Path to the test project file.  If provided, run unit tests, otherwise skip them.'
        required: false
        type: string
      build_output_path:
        description: 'Build output path.'
        required: true
        type: string
      dll_name:
        description: 'Build output dll name.'
        required: true
        type: string
      dry_run:
        description: 'Is this a dry run. If so no package will be published.'
        required: true
        type: boolean
  workflow_call:
    inputs:
      workspace_path:
        description: 'Path to the workspace being released.'
        required: true
        type: string
      project_file:
        description: 'Path to the project file.'
        required: true
        type: string
      test_project_file:
        description: 'Path to the test project file.  If provided, run unit tests, otherwise skip them.'
        required: false
        type: string
      build_output_path:
        description: 'Build output path.'
        required: true
        type: string
      dll_name:
        description: 'Build output dll name.'
        required: true
        type: string
      dry_run:
        description: 'Is this a dry run. If so no package will be published.'
        type: boolean
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: CI check
        uses: ./.github/actions/ci
        with:
          project_file: ${{ inputs.project_file }}
          test_project_file: ${{ inputs.test_project_file }}

      - uses: launchdarkly/gh-actions/actions/release-secrets@release-secrets-v1.1.0
        name: Get secrets
        with:
          aws_assume_role: ${{ vars.AWS_ROLE_ARN }}
          ssm_parameter_pairs: '/production/common/releasing/digicert/host = DIGICERT_HOST,
          /production/common/releasing/digicert/api_key = DIGICERT_API_KEY,
          /production/common/releasing/digicert/client_cert_file_b64 = DIGICERT_CLIENT_CERT_FILE_B64,
          /production/common/releasing/digicert/client_cert_password = DIGICERT_CLIENT_CERT_PASSWORD,
          /production/common/releasing/digicert/code_signing_cert_sha1_hash = DIGICERT_CODE_SIGNING_CERT_SHA1_HASH'
          s3_path_pairs: 'launchdarkly-releaser/dotnet/LaunchDarkly.snk = LaunchDarkly.snk'

      - name: Release build
        uses: ./.github/actions/build-release
        with:
          project_file: packagess/sdk/server/src/LaunchDarkly.ServerSdk.csproj

      - name: Sign DLLs
        uses: launchdarkly/gh-actions/actions/sign-dlls@sign-dlls-v1.0.0
        with:
          build_output_path: ${{ inputs.build_output_path }}
          dll_name: ${{ inputs.dll_name }}

      - name: Publish Nupkg
        uses: ./.github/actions/publish-package
        with:
          project_file: packagess/sdk/server/src/LaunchDarkly.ServerSdk.csproj
          dry_run: ${{ inputs.dry_run }}
